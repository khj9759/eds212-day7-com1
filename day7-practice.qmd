---
title: "Day7"
format: html
editor: visual
execute: 
  warning: false
---

```{r}
library(tidyverse)
library(palmerpenguins)
```

## Data wrangling refresher

1.  starting from penguins, write a single pipe sequence in which you:
    -   **Only** include penguins at Dream and Biscoe lslands
    -   Remove the year and sex variables
    -   Add a new column body_mass_kg with penguin mass converted from g to kg
    -   Rename the island variable to location

```{r}
penguins %>% filter (island  %in% c("Dream","Biscoe")) %>%
  select (-year,-sex) %>%
  mutate(body_mass_kg = body_mass_g * 0.001) %>%
  rename(location = island)
```

2.  Starting from penguins, write a single piped sequence to:

    -   Limit to Adelie penguins
    -   Remove any observations where filpper_length_mm is NA(!is.na()) or drop_na)
    -   Group the data by sex
    -   Create a summary table that contains the mean, standard deviation and sample size of flipper length for male and female Adelie penguins.

    ```{r}
    adelie_summary <- penguins %>% 
      filter(species == "Adelie") %>%
      drop_na(flipper_length_mm)%>%
      group_by(sex) %>%
      summarize(mean_flipper_length = mean(flipper_length_mm), sd_flipper_length = sd(flipper_length_mm),sample_size =n())

    # filter(speices == "Adelie", !is.na(filler_length_mm)) <- include drop_na() when you want to remove one of column
    ```

```{r}
penguins %>%
  group_by(species, island, sex) %>%
  summarize(sample_size = n())

# Count() is just wrapping together group_by() + summarize() + n() to get counts of obsevations. 
penguins %>% count (species, island, sex)
```

```{r}
animals <- data.frame(
  stringsAsFactors = FALSE,
          location = c("lagoon", "bluff", "creek", "oaks", "bluff"),
           species = c("bobcat", "coyote", "fox", "squirrel", "bobcat"),
          maturity = c("adult", "juvenile", "adult", "juvenile", "adult")
)
```

```{r}
sites <- data.frame(
  stringsAsFactors = FALSE,
          location = c("beach", "lagoon", "bluff", "oaks"),
    full_site_name = c("Goleta Beach","UCSB Lagoon",
                       "Ellwood Mesa","Fremont Campground"),
      jurisdiction = c("SB City", "UCSB", "SB City", "USFS")
)
```

## full_join(x,y):

```{r}
full_join_example <- full_join (animals, sites)
```

## left_join(x,y):

```{r}
left_join_example <- left_join (animals, sites)
```

## inner_join(x,y):

```{r}
inner_join_example <- inner_join (animals, sites)
```

## Date-times with lubridate()

-   ymd: if date is in year-month-day

-   mdy: if date is in month-day-year

-   dmy: if date is in day-month-year

```{r}
my_date_1 <- lubridate::mdy("03-05-1988")
my_date_1
class(my_date_1)

my_date_2 <- lubridate::mdy("11/7/2003")
class(my_date_2)

my_date_3 <- lubridate::dmy("08-Jun-1974")

my_date_4 <- lubridate::ymd("19740205")
class(my_date_4)
```

Can we break the lubridate parsing functions?

```{r}
my_date_5 <- lubridate::mdy("06-20-2001")
```

Adding times to our dates

```{r}
time_1 <- lubridate::ymd_hm("2020-08-12 11:18")

```

Parse June 2, 1982 at 4 pm UTC (16:00) as a date in R.

```{r}
time_2 <- lubridate::mdy_hm("June 2, 1982 4:00PM")

```

```{r}
lubridate::with_tz(time_2, "America/Los_Angeles")
```

```{r}
lubridate::with_tz(time_2, "Asia/Shanghai")
```

```{r}
now <- with_tz(Sys.time(), "Europe/Belgrade")
```

```{r}
Sys.time()
```

Access different parts of date-times

```{r}
lubridate::day(now)
```

```{r}
lubridate::week(now)
```

```{r}
urchin_counts <- data.frame(
  date = c("Oct 12, 2004", "October 18, 2007", "Feb 12, 2003", "Feb 14, 2008"),
  species = c("purple","red", "red", "yellow"),
  size_mm = c(19, 24, 18, 11)
)
```

convert to mdy, and group_by summarize (length, month):

```{r}
# Add a new column month that only contains the month number from date
urchin_mean_by_month <- urchin_counts %>%
  mutate(date = lubridate::mdy(date)) %>%
  mutate(month = lubridate::month(date)) %>%
  group_by(month) %>%
  summarize(mean_size = mean(size_mm))
```

## Strings with stringr

Use str_detect to detect a string pattern

```{r}
my_string <- "Teddy loves salmon and kibble and toys"
```

```{r}
str_detect(my_string, pattern = "kibble")
```

```{r}
str_detect(my_string,"hot weather")
```

```{r}
my_string_2 <- c("burrito", "fish taco", "Taco salad", "supper-burrito")
```

```{r}
str_detect (my_string_2, pattern = "taco")
```

str_detect():

```{r}
starwars %>% 
  filter(str_detect(name, pattern = "Skywalker"))
```

str_replace ():

```{r}
starwars %>% 
  mutate(name_new = str_replace(name, pattern = "Sky", replacement = "Fire"))
```

str_trim to get rid of leading and trailing whitespace

str_squish to get rid of leading and trailing whitespace AND excess interioir white space

```{r}
my_string_3 <- "   Hi my name    is teddy !  ! !    "
```

```{r}
str_trim(my_string_3)

```

```{r}
str_squish(my_string_3)
```

```{r}
str_to_lower(my_string_3)
```

```{r}
str_to_upper(my_string_3)
```

```{r}
str_to_title(my_string_3)
```

```{r}
str_to_sentence(my_string_3)
```

```{r}
starwars %>%
  mutate(species_lower = str_to_lower(species))
```
